name: Release

on:
  workflow_dispatch:
    inputs:
      module:
        description: "Maven (Sub)module to Release (e.g.,
                  keycloak-extensions,
                  authenticator-required-action,
                  keycloak-extension-rest,
                  user-management).
                  Parent is the default"
        required: false
        default: parent
      releaseVersion:
        description: "Version to use for release."
        required: true
        default: "X.Y.Z"
      developmentVersion:
        description: "Version to use for next development cycle."
        required: true
        default: "X.Y.Z-SNAPSHOT"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Configure Git User
        run: |
          git config user.email "actions@github.com"
          git config user.name "GitHub Actions"

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'maven'

      - name: Install Parent POM (If necessary locally)
        run: mvn install -N || echo "Parent-POM already exists or is getting downloaded from repo."

      - name: Ensure Submodules Keep Own Version
        run: mvn versions:update-parent -DallowSnapshots=true

      #  Entscheidet, ob das `parent`-Modul oder ein Submodul gebaut wird
      - name: Determine Build Scope
        id: determine_scope
        run: |
          if [[ "${{ github.event.inputs.module }}" == "parent" ]]; then
            echo "BUILD_MODULE=parent" >> $GITHUB_ENV
            echo "BUILD_ARGS=" >> $GITHUB_ENV  # Baut das gesamte Projekt
          else
            echo "BUILD_MODULE=${{ github.event.inputs.module }}" >> $GITHUB_ENV
            echo "BUILD_ARGS=-pl ${{ github.event.inputs.module }} -am" >> $GITHUB_ENV
          fi

      - name: Build and Package Selected Module
        run: mvn clean package $BUILD_ARGS

      - name: Release Selected Module
        run: |
          mvn -B clean release:prepare release:perform \
            -DpushChanges=false -DlocalCheckout=true \
            -DreleaseVersion=${{ github.event.inputs.releaseVersion }} \
            -DdevelopmentVersion=${{ github.event.inputs.developmentVersion }} \
            -DautoVersionSubmodules=false \
            $BUILD_ARGS

          git tag v${{ github.event.inputs.releaseVersion }}-${{ env.BUILD_MODULE }}
          git push origin v${{ github.event.inputs.releaseVersion }}-${{ env.BUILD_MODULE }}
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
#
#      - name: Release to GitHub Releases
#        uses: softprops/action-gh-release@v2
#        with:
#          files: "target/${{ env.BUILD_MODULE }}.jar"
#          body_path: "RELEASELOG.md"
#          fail_on_unmatched_files: true
#          tag_name: v${{ github.event.inputs.releaseVersion }}-${{ env.BUILD_MODULE }}
#          generate_release_notes: true
#        env:
#          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Create Pull Request for Next Snapshot
        id: create-pr
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore(release): Bump version of ${{ env.BUILD_MODULE }} to next snapshot"
          delete-branch: "true"
          branch: "release/${{ github.event.inputs.releaseVersion }}-${{ env.BUILD_MODULE }}"
          base: "main"
          title: "chore(release): Prepare next snapshot version for ${{ env.BUILD_MODULE }}"
          body: "Automated PR for next snapshot after ${{ env.BUILD_MODULE }} release ${{ github.event.inputs.releaseVersion }}"
          labels: "release,ignore-for-release"
          assignees: "befsch"
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
